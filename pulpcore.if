## <summary>Platform for managing repositories of software packages</summary>
#
#########################################
## <summary>
##	Transition to pulpcore named content
## </summary>
## <param name="domain">
##	<summary>
##      Domain allowed access.
##	</summary>
## </param>
#
interface(`pulpcore_filetrans_named_content',`
	gen_require(`
		type pulpcore_var_run_t, pulpcore_server_var_run_t;
	')

	files_pid_filetrans($1, pulpcore_server_var_run_t, { dir }, "pulpcore-content")
	files_pid_filetrans($1, pulpcore_server_var_run_t, { dir }, "pulpcore-api")
	files_pid_filetrans($1, pulpcore_var_run_t, { dir }, "pulpcore-resource-manager")
	files_pid_filetrans($1, pulpcore_var_run_t, { dir }, "pulpcore-worker-1")
	files_pid_filetrans($1, pulpcore_var_run_t, { dir }, "pulpcore-worker-2")
')


#######################################
## <summary>
##	Connect to pulpcore-server over a unix domain stream socket.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`pulpcore_server_stream_connect',`
	gen_require(`
		type pulpcore_server_t, pulpcore_server_var_run_t;
	')

	files_search_pids($1)
	stream_connect_pattern($1, pulpcore_server_var_run_t, pulpcore_server_var_run_t, pulpcore_server_t)
')

########################################


########################################
## <summary>
##	Bind TCP sockets to the pulp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_bind_pulpcore_port',`
	gen_require(`
		type pulpcore_port_t;
	')

	allow $1 pulpcore_port_t:tcp_socket name_bind;

')


########################################
## <summary>
##	Connect TCP sockets to the pulp port.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <infoflow type="none"/>
#
interface(`corenet_tcp_connect_pulpcore_port',`
	gen_require(`
		type pulpcore_port_t;
	')

	allow $1 pulpcore_port_t:tcp_socket name_connect;
	
')

#######################################
## <summary>
##	Connect to redis over a unix domain stream socket.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`redis_stream_connect',`
	gen_require(`
		type redis_t, redis_var_run_t;
	')

	files_search_pids($1)
	stream_connect_pattern($1, redis_var_run_t, redis_var_run_t, redis_t)
')
